//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Entities", "FK_CharacterEquipment_GoalsCharacters", "GoalsCharacter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsCharacter), "CharacterEquipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.CharacterEquipment))]
[assembly: EdmRelationshipAttribute("Entities", "FK_CharacterEquipment_GoalsEquipment", "GoalsEquipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsEquipment), "CharacterEquipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.CharacterEquipment))]
[assembly: EdmRelationshipAttribute("Entities", "FK_CharacterPowers_GoalsCharacters", "GoalsCharacter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsCharacter), "CharacterPower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.CharacterPower))]
[assembly: EdmRelationshipAttribute("Entities", "FK_CharacterPowers_GoalsPowers", "GoalsPower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsPower), "CharacterPower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.CharacterPower))]
[assembly: EdmRelationshipAttribute("Entities", "FK_CharacterSpells_GoalsCharacters", "GoalsCharacter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsCharacter), "CharacterSpell", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.CharacterSpell))]
[assembly: EdmRelationshipAttribute("Entities", "FK_CharacterSpells_GoalsSpells", "GoalsSpell", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsSpell), "CharacterSpell", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.CharacterSpell))]
[assembly: EdmRelationshipAttribute("Entities", "FK_ClassEquipment_GoalsClasses", "GoalsClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsClass), "ClassEquipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.ClassEquipment))]
[assembly: EdmRelationshipAttribute("Entities", "FK_ClassEquipment_GoalsEquipment", "GoalsEquipment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsEquipment), "ClassEquipment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.ClassEquipment))]
[assembly: EdmRelationshipAttribute("Entities", "FK_ClassPowers_GoalsClasses", "GoalsClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsClass), "ClassPower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.ClassPower))]
[assembly: EdmRelationshipAttribute("Entities", "FK_ClassPowers_GoalsPowers", "GoalsPower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsPower), "ClassPower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.ClassPower))]
[assembly: EdmRelationshipAttribute("Entities", "FK_GoalsCharacters_GoalsClasses", "GoalsClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GoalsCharacterSheet.Core.Entities.GoalsClass), "GoalsCharacter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.GoalsCharacter))]
[assembly: EdmRelationshipAttribute("Entities", "FK_GoalsCharacters_GoalsRaces1", "GoalsRace", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GoalsCharacterSheet.Core.Entities.GoalsRace), "GoalsCharacter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.GoalsCharacter))]
[assembly: EdmRelationshipAttribute("Entities", "FK_GoalsCharacters_GoalsUsers", "GoalsUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsUser), "GoalsCharacter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.GoalsCharacter))]
[assembly: EdmRelationshipAttribute("Entities", "FK_RaceFavoredClass_GoalsClasses", "GoalsClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsClass), "RaceFavoredClass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.RaceFavoredClass))]
[assembly: EdmRelationshipAttribute("Entities", "FK_RacePowers_GoalsPowers", "GoalsPower", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsPower), "RacePower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.RacePower))]
[assembly: EdmRelationshipAttribute("Entities", "FK_GoalsRaceMeta_GoalsRaces", "GoalsRace", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsRace), "GoalsRaceMeta", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.GoalsRaceMeta))]
[assembly: EdmRelationshipAttribute("Entities", "FK_RaceFavoredClass_GoalsRaces", "GoalsRace", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsRace), "RaceFavoredClass", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.RaceFavoredClass))]
[assembly: EdmRelationshipAttribute("Entities", "FK_RacePowers_GoalsRaces", "GoalsRace", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GoalsCharacterSheet.Core.Entities.GoalsRace), "RacePower", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GoalsCharacterSheet.Core.Entities.RacePower))]

#endregion

namespace GoalsCharacterSheet.Core.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GCSDatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GCSDatabaseEntities object using the connection string found in the 'GCSDatabaseEntities' section of the application configuration file.
        /// </summary>
        public GCSDatabaseEntities() : base("name=GCSDatabaseEntities", "GCSDatabaseEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GCSDatabaseEntities object.
        /// </summary>
        public GCSDatabaseEntities(string connectionString) : base(connectionString, "GCSDatabaseEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GCSDatabaseEntities object.
        /// </summary>
        public GCSDatabaseEntities(EntityConnection connection) : base(connection, "GCSDatabaseEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CharacterEquipment> CharacterEquipments
        {
            get
            {
                if ((_CharacterEquipments == null))
                {
                    _CharacterEquipments = base.CreateObjectSet<CharacterEquipment>("CharacterEquipments");
                }
                return _CharacterEquipments;
            }
        }
        private ObjectSet<CharacterEquipment> _CharacterEquipments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CharacterPower> CharacterPowers
        {
            get
            {
                if ((_CharacterPowers == null))
                {
                    _CharacterPowers = base.CreateObjectSet<CharacterPower>("CharacterPowers");
                }
                return _CharacterPowers;
            }
        }
        private ObjectSet<CharacterPower> _CharacterPowers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CharacterSpell> CharacterSpells
        {
            get
            {
                if ((_CharacterSpells == null))
                {
                    _CharacterSpells = base.CreateObjectSet<CharacterSpell>("CharacterSpells");
                }
                return _CharacterSpells;
            }
        }
        private ObjectSet<CharacterSpell> _CharacterSpells;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClassEquipment> ClassEquipments
        {
            get
            {
                if ((_ClassEquipments == null))
                {
                    _ClassEquipments = base.CreateObjectSet<ClassEquipment>("ClassEquipments");
                }
                return _ClassEquipments;
            }
        }
        private ObjectSet<ClassEquipment> _ClassEquipments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClassPower> ClassPowers
        {
            get
            {
                if ((_ClassPowers == null))
                {
                    _ClassPowers = base.CreateObjectSet<ClassPower>("ClassPowers");
                }
                return _ClassPowers;
            }
        }
        private ObjectSet<ClassPower> _ClassPowers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalsCharacter> GoalsCharacters
        {
            get
            {
                if ((_GoalsCharacters == null))
                {
                    _GoalsCharacters = base.CreateObjectSet<GoalsCharacter>("GoalsCharacters");
                }
                return _GoalsCharacters;
            }
        }
        private ObjectSet<GoalsCharacter> _GoalsCharacters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalsClass> GoalsClasses
        {
            get
            {
                if ((_GoalsClasses == null))
                {
                    _GoalsClasses = base.CreateObjectSet<GoalsClass>("GoalsClasses");
                }
                return _GoalsClasses;
            }
        }
        private ObjectSet<GoalsClass> _GoalsClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalsEquipment> GoalsEquipments
        {
            get
            {
                if ((_GoalsEquipments == null))
                {
                    _GoalsEquipments = base.CreateObjectSet<GoalsEquipment>("GoalsEquipments");
                }
                return _GoalsEquipments;
            }
        }
        private ObjectSet<GoalsEquipment> _GoalsEquipments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalsPower> GoalsPowers
        {
            get
            {
                if ((_GoalsPowers == null))
                {
                    _GoalsPowers = base.CreateObjectSet<GoalsPower>("GoalsPowers");
                }
                return _GoalsPowers;
            }
        }
        private ObjectSet<GoalsPower> _GoalsPowers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalsRaceMeta> GoalsRaceMetas
        {
            get
            {
                if ((_GoalsRaceMetas == null))
                {
                    _GoalsRaceMetas = base.CreateObjectSet<GoalsRaceMeta>("GoalsRaceMetas");
                }
                return _GoalsRaceMetas;
            }
        }
        private ObjectSet<GoalsRaceMeta> _GoalsRaceMetas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalsRace> GoalsRaces
        {
            get
            {
                if ((_GoalsRaces == null))
                {
                    _GoalsRaces = base.CreateObjectSet<GoalsRace>("GoalsRaces");
                }
                return _GoalsRaces;
            }
        }
        private ObjectSet<GoalsRace> _GoalsRaces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalsSpell> GoalsSpells
        {
            get
            {
                if ((_GoalsSpells == null))
                {
                    _GoalsSpells = base.CreateObjectSet<GoalsSpell>("GoalsSpells");
                }
                return _GoalsSpells;
            }
        }
        private ObjectSet<GoalsSpell> _GoalsSpells;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoalsUser> GoalsUsers
        {
            get
            {
                if ((_GoalsUsers == null))
                {
                    _GoalsUsers = base.CreateObjectSet<GoalsUser>("GoalsUsers");
                }
                return _GoalsUsers;
            }
        }
        private ObjectSet<GoalsUser> _GoalsUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RaceFavoredClass> RaceFavoredClasses
        {
            get
            {
                if ((_RaceFavoredClasses == null))
                {
                    _RaceFavoredClasses = base.CreateObjectSet<RaceFavoredClass>("RaceFavoredClasses");
                }
                return _RaceFavoredClasses;
            }
        }
        private ObjectSet<RaceFavoredClass> _RaceFavoredClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RacePower> RacePowers
        {
            get
            {
                if ((_RacePowers == null))
                {
                    _RacePowers = base.CreateObjectSet<RacePower>("RacePowers");
                }
                return _RacePowers;
            }
        }
        private ObjectSet<RacePower> _RacePowers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CharacterEquipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCharacterEquipments(CharacterEquipment characterEquipment)
        {
            base.AddObject("CharacterEquipments", characterEquipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CharacterPowers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCharacterPowers(CharacterPower characterPower)
        {
            base.AddObject("CharacterPowers", characterPower);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CharacterSpells EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCharacterSpells(CharacterSpell characterSpell)
        {
            base.AddObject("CharacterSpells", characterSpell);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClassEquipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClassEquipments(ClassEquipment classEquipment)
        {
            base.AddObject("ClassEquipments", classEquipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClassPowers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClassPowers(ClassPower classPower)
        {
            base.AddObject("ClassPowers", classPower);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalsCharacters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalsCharacters(GoalsCharacter goalsCharacter)
        {
            base.AddObject("GoalsCharacters", goalsCharacter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalsClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalsClasses(GoalsClass goalsClass)
        {
            base.AddObject("GoalsClasses", goalsClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalsEquipments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalsEquipments(GoalsEquipment goalsEquipment)
        {
            base.AddObject("GoalsEquipments", goalsEquipment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalsPowers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalsPowers(GoalsPower goalsPower)
        {
            base.AddObject("GoalsPowers", goalsPower);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalsRaceMetas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalsRaceMetas(GoalsRaceMeta goalsRaceMeta)
        {
            base.AddObject("GoalsRaceMetas", goalsRaceMeta);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalsRaces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalsRaces(GoalsRace goalsRace)
        {
            base.AddObject("GoalsRaces", goalsRace);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalsSpells EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalsSpells(GoalsSpell goalsSpell)
        {
            base.AddObject("GoalsSpells", goalsSpell);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoalsUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoalsUsers(GoalsUser goalsUser)
        {
            base.AddObject("GoalsUsers", goalsUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RaceFavoredClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaceFavoredClasses(RaceFavoredClass raceFavoredClass)
        {
            base.AddObject("RaceFavoredClasses", raceFavoredClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RacePowers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRacePowers(RacePower racePower)
        {
            base.AddObject("RacePowers", racePower);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="CharacterEquipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CharacterEquipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CharacterEquipment object.
        /// </summary>
        /// <param name="characterEquipmentId">Initial value of the CharacterEquipmentId property.</param>
        /// <param name="goalsEquipmenTemplateId">Initial value of the GoalsEquipmenTemplateId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static CharacterEquipment CreateCharacterEquipment(global::System.Int32 characterEquipmentId, global::System.Int32 goalsEquipmenTemplateId, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            CharacterEquipment characterEquipment = new CharacterEquipment();
            characterEquipment.CharacterEquipmentId = characterEquipmentId;
            characterEquipment.GoalsEquipmenTemplateId = goalsEquipmenTemplateId;
            characterEquipment.CreatedDate = createdDate;
            characterEquipment.ModifiedDate = modifiedDate;
            return characterEquipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CharacterEquipmentId
        {
            get
            {
                return _CharacterEquipmentId;
            }
            set
            {
                if (_CharacterEquipmentId != value)
                {
                    OnCharacterEquipmentIdChanging(value);
                    ReportPropertyChanging("CharacterEquipmentId");
                    _CharacterEquipmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CharacterEquipmentId");
                    OnCharacterEquipmentIdChanged();
                }
            }
        }
        private global::System.Int32 _CharacterEquipmentId;
        partial void OnCharacterEquipmentIdChanging(global::System.Int32 value);
        partial void OnCharacterEquipmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsEquipmenTemplateId
        {
            get
            {
                return _GoalsEquipmenTemplateId;
            }
            set
            {
                OnGoalsEquipmenTemplateIdChanging(value);
                ReportPropertyChanging("GoalsEquipmenTemplateId");
                _GoalsEquipmenTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GoalsEquipmenTemplateId");
                OnGoalsEquipmenTemplateIdChanged();
            }
        }
        private global::System.Int32 _GoalsEquipmenTemplateId;
        partial void OnGoalsEquipmenTemplateIdChanging(global::System.Int32 value);
        partial void OnGoalsEquipmenTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterEquipment_GoalsCharacters", "GoalsCharacter")]
        public GoalsCharacter GoalsCharacter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterEquipment_GoalsCharacters", "GoalsCharacter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterEquipment_GoalsCharacters", "GoalsCharacter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsCharacter> GoalsCharacterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterEquipment_GoalsCharacters", "GoalsCharacter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsCharacter>("Entities.FK_CharacterEquipment_GoalsCharacters", "GoalsCharacter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterEquipment_GoalsEquipment", "GoalsEquipment")]
        public GoalsEquipment GoalsEquipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsEquipment>("Entities.FK_CharacterEquipment_GoalsEquipment", "GoalsEquipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsEquipment>("Entities.FK_CharacterEquipment_GoalsEquipment", "GoalsEquipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsEquipment> GoalsEquipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsEquipment>("Entities.FK_CharacterEquipment_GoalsEquipment", "GoalsEquipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsEquipment>("Entities.FK_CharacterEquipment_GoalsEquipment", "GoalsEquipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="CharacterPower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CharacterPower : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CharacterPower object.
        /// </summary>
        /// <param name="characterPowerId">Initial value of the CharacterPowerId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static CharacterPower CreateCharacterPower(global::System.Int32 characterPowerId, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            CharacterPower characterPower = new CharacterPower();
            characterPower.CharacterPowerId = characterPowerId;
            characterPower.CreatedDate = createdDate;
            characterPower.ModifiedDate = modifiedDate;
            return characterPower;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CharacterPowerId
        {
            get
            {
                return _CharacterPowerId;
            }
            set
            {
                if (_CharacterPowerId != value)
                {
                    OnCharacterPowerIdChanging(value);
                    ReportPropertyChanging("CharacterPowerId");
                    _CharacterPowerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CharacterPowerId");
                    OnCharacterPowerIdChanged();
                }
            }
        }
        private global::System.Int32 _CharacterPowerId;
        partial void OnCharacterPowerIdChanging(global::System.Int32 value);
        partial void OnCharacterPowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GoalsPowerTemplateId
        {
            get
            {
                return _GoalsPowerTemplateId;
            }
            set
            {
                OnGoalsPowerTemplateIdChanging(value);
                ReportPropertyChanging("GoalsPowerTemplateId");
                _GoalsPowerTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GoalsPowerTemplateId");
                OnGoalsPowerTemplateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GoalsPowerTemplateId;
        partial void OnGoalsPowerTemplateIdChanging(Nullable<global::System.Int32> value);
        partial void OnGoalsPowerTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterPowers_GoalsCharacters", "GoalsCharacter")]
        public GoalsCharacter GoalsCharacter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterPowers_GoalsCharacters", "GoalsCharacter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterPowers_GoalsCharacters", "GoalsCharacter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsCharacter> GoalsCharacterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterPowers_GoalsCharacters", "GoalsCharacter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsCharacter>("Entities.FK_CharacterPowers_GoalsCharacters", "GoalsCharacter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterPowers_GoalsPowers", "GoalsPower")]
        public GoalsPower GoalsPower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_CharacterPowers_GoalsPowers", "GoalsPower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_CharacterPowers_GoalsPowers", "GoalsPower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsPower> GoalsPowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_CharacterPowers_GoalsPowers", "GoalsPower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsPower>("Entities.FK_CharacterPowers_GoalsPowers", "GoalsPower", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="CharacterSpell")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CharacterSpell : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CharacterSpell object.
        /// </summary>
        /// <param name="characterSpellId">Initial value of the CharacterSpellId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static CharacterSpell CreateCharacterSpell(global::System.Int32 characterSpellId, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            CharacterSpell characterSpell = new CharacterSpell();
            characterSpell.CharacterSpellId = characterSpellId;
            characterSpell.CreatedDate = createdDate;
            characterSpell.ModifiedDate = modifiedDate;
            return characterSpell;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CharacterSpellId
        {
            get
            {
                return _CharacterSpellId;
            }
            set
            {
                if (_CharacterSpellId != value)
                {
                    OnCharacterSpellIdChanging(value);
                    ReportPropertyChanging("CharacterSpellId");
                    _CharacterSpellId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CharacterSpellId");
                    OnCharacterSpellIdChanged();
                }
            }
        }
        private global::System.Int32 _CharacterSpellId;
        partial void OnCharacterSpellIdChanging(global::System.Int32 value);
        partial void OnCharacterSpellIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GoalsSpellTemplateId
        {
            get
            {
                return _GoalsSpellTemplateId;
            }
            set
            {
                OnGoalsSpellTemplateIdChanging(value);
                ReportPropertyChanging("GoalsSpellTemplateId");
                _GoalsSpellTemplateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GoalsSpellTemplateId");
                OnGoalsSpellTemplateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GoalsSpellTemplateId;
        partial void OnGoalsSpellTemplateIdChanging(Nullable<global::System.Int32> value);
        partial void OnGoalsSpellTemplateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterSpells_GoalsCharacters", "GoalsCharacter")]
        public GoalsCharacter GoalsCharacter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterSpells_GoalsCharacters", "GoalsCharacter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterSpells_GoalsCharacters", "GoalsCharacter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsCharacter> GoalsCharacterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsCharacter>("Entities.FK_CharacterSpells_GoalsCharacters", "GoalsCharacter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsCharacter>("Entities.FK_CharacterSpells_GoalsCharacters", "GoalsCharacter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterSpells_GoalsSpells", "GoalsSpell")]
        public GoalsSpell GoalsSpell
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsSpell>("Entities.FK_CharacterSpells_GoalsSpells", "GoalsSpell").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsSpell>("Entities.FK_CharacterSpells_GoalsSpells", "GoalsSpell").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsSpell> GoalsSpellReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsSpell>("Entities.FK_CharacterSpells_GoalsSpells", "GoalsSpell");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsSpell>("Entities.FK_CharacterSpells_GoalsSpells", "GoalsSpell", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="ClassEquipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClassEquipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClassEquipment object.
        /// </summary>
        /// <param name="classEquipmentId">Initial value of the ClassEquipmentId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static ClassEquipment CreateClassEquipment(global::System.Int32 classEquipmentId, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            ClassEquipment classEquipment = new ClassEquipment();
            classEquipment.ClassEquipmentId = classEquipmentId;
            classEquipment.CreatedDate = createdDate;
            classEquipment.ModifiedDate = modifiedDate;
            return classEquipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassEquipmentId
        {
            get
            {
                return _ClassEquipmentId;
            }
            set
            {
                if (_ClassEquipmentId != value)
                {
                    OnClassEquipmentIdChanging(value);
                    ReportPropertyChanging("ClassEquipmentId");
                    _ClassEquipmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClassEquipmentId");
                    OnClassEquipmentIdChanged();
                }
            }
        }
        private global::System.Int32 _ClassEquipmentId;
        partial void OnClassEquipmentIdChanging(global::System.Int32 value);
        partial void OnClassEquipmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_ClassEquipment_GoalsClasses", "GoalsClass")]
        public GoalsClass GoalsClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_ClassEquipment_GoalsClasses", "GoalsClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_ClassEquipment_GoalsClasses", "GoalsClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsClass> GoalsClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_ClassEquipment_GoalsClasses", "GoalsClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsClass>("Entities.FK_ClassEquipment_GoalsClasses", "GoalsClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_ClassEquipment_GoalsEquipment", "GoalsEquipment")]
        public GoalsEquipment GoalsEquipment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsEquipment>("Entities.FK_ClassEquipment_GoalsEquipment", "GoalsEquipment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsEquipment>("Entities.FK_ClassEquipment_GoalsEquipment", "GoalsEquipment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsEquipment> GoalsEquipmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsEquipment>("Entities.FK_ClassEquipment_GoalsEquipment", "GoalsEquipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsEquipment>("Entities.FK_ClassEquipment_GoalsEquipment", "GoalsEquipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="ClassPower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClassPower : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClassPower object.
        /// </summary>
        /// <param name="classPowerId">Initial value of the ClassPowerId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static ClassPower CreateClassPower(global::System.Int32 classPowerId, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            ClassPower classPower = new ClassPower();
            classPower.ClassPowerId = classPowerId;
            classPower.CreatedDate = createdDate;
            classPower.ModifiedDate = modifiedDate;
            return classPower;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassPowerId
        {
            get
            {
                return _ClassPowerId;
            }
            set
            {
                if (_ClassPowerId != value)
                {
                    OnClassPowerIdChanging(value);
                    ReportPropertyChanging("ClassPowerId");
                    _ClassPowerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClassPowerId");
                    OnClassPowerIdChanged();
                }
            }
        }
        private global::System.Int32 _ClassPowerId;
        partial void OnClassPowerIdChanging(global::System.Int32 value);
        partial void OnClassPowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_ClassPowers_GoalsClasses", "GoalsClass")]
        public GoalsClass GoalsClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_ClassPowers_GoalsClasses", "GoalsClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_ClassPowers_GoalsClasses", "GoalsClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsClass> GoalsClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_ClassPowers_GoalsClasses", "GoalsClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsClass>("Entities.FK_ClassPowers_GoalsClasses", "GoalsClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_ClassPowers_GoalsPowers", "GoalsPower")]
        public GoalsPower GoalsPower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_ClassPowers_GoalsPowers", "GoalsPower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_ClassPowers_GoalsPowers", "GoalsPower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsPower> GoalsPowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_ClassPowers_GoalsPowers", "GoalsPower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsPower>("Entities.FK_ClassPowers_GoalsPowers", "GoalsPower", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="GoalsCharacter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalsCharacter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalsCharacter object.
        /// </summary>
        /// <param name="goalsCharacterId">Initial value of the GoalsCharacterId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alignment">Initial value of the Alignment property.</param>
        /// <param name="fate">Initial value of the Fate property.</param>
        /// <param name="characterLevel">Initial value of the CharacterLevel property.</param>
        /// <param name="hitPoints">Initial value of the HitPoints property.</param>
        /// <param name="speed">Initial value of the Speed property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="baseTraitClass">Initial value of the BaseTraitClass property.</param>
        /// <param name="baseTraitStrength">Initial value of the BaseTraitStrength property.</param>
        /// <param name="baseTraitToughness">Initial value of the BaseTraitToughness property.</param>
        /// <param name="baseTraitDefense">Initial value of the BaseTraitDefense property.</param>
        /// <param name="baseTraitInitiative">Initial value of the BaseTraitInitiative property.</param>
        /// <param name="modTraitClass">Initial value of the ModTraitClass property.</param>
        /// <param name="modTraitStrength">Initial value of the ModTraitStrength property.</param>
        /// <param name="modTraitToughness">Initial value of the ModTraitToughness property.</param>
        /// <param name="modTraitDefense">Initial value of the ModTraitDefense property.</param>
        /// <param name="modTraitInitiative">Initial value of the ModTraitInitiative property.</param>
        /// <param name="reward">Initial value of the Reward property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static GoalsCharacter CreateGoalsCharacter(global::System.Int32 goalsCharacterId, global::System.String name, global::System.String alignment, global::System.Int32 fate, global::System.Int32 characterLevel, global::System.Int32 hitPoints, global::System.Int32 speed, global::System.Int32 cost, global::System.Int32 baseTraitClass, global::System.Int32 baseTraitStrength, global::System.Int32 baseTraitToughness, global::System.Int32 baseTraitDefense, global::System.Int32 baseTraitInitiative, global::System.Int32 modTraitClass, global::System.Int32 modTraitStrength, global::System.Int32 modTraitToughness, global::System.Int32 modTraitDefense, global::System.Int32 modTraitInitiative, global::System.Int32 reward, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            GoalsCharacter goalsCharacter = new GoalsCharacter();
            goalsCharacter.GoalsCharacterId = goalsCharacterId;
            goalsCharacter.Name = name;
            goalsCharacter.Alignment = alignment;
            goalsCharacter.Fate = fate;
            goalsCharacter.CharacterLevel = characterLevel;
            goalsCharacter.HitPoints = hitPoints;
            goalsCharacter.Speed = speed;
            goalsCharacter.Cost = cost;
            goalsCharacter.BaseTraitClass = baseTraitClass;
            goalsCharacter.BaseTraitStrength = baseTraitStrength;
            goalsCharacter.BaseTraitToughness = baseTraitToughness;
            goalsCharacter.BaseTraitDefense = baseTraitDefense;
            goalsCharacter.BaseTraitInitiative = baseTraitInitiative;
            goalsCharacter.ModTraitClass = modTraitClass;
            goalsCharacter.ModTraitStrength = modTraitStrength;
            goalsCharacter.ModTraitToughness = modTraitToughness;
            goalsCharacter.ModTraitDefense = modTraitDefense;
            goalsCharacter.ModTraitInitiative = modTraitInitiative;
            goalsCharacter.Reward = reward;
            goalsCharacter.CreatedDate = createdDate;
            goalsCharacter.ModifiedDate = modifiedDate;
            return goalsCharacter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsCharacterId
        {
            get
            {
                return _GoalsCharacterId;
            }
            set
            {
                if (_GoalsCharacterId != value)
                {
                    OnGoalsCharacterIdChanging(value);
                    ReportPropertyChanging("GoalsCharacterId");
                    _GoalsCharacterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalsCharacterId");
                    OnGoalsCharacterIdChanged();
                }
            }
        }
        private global::System.Int32 _GoalsCharacterId;
        partial void OnGoalsCharacterIdChanging(global::System.Int32 value);
        partial void OnGoalsCharacterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Alignment
        {
            get
            {
                return _Alignment;
            }
            set
            {
                OnAlignmentChanging(value);
                ReportPropertyChanging("Alignment");
                _Alignment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Alignment");
                OnAlignmentChanged();
            }
        }
        private global::System.String _Alignment;
        partial void OnAlignmentChanging(global::System.String value);
        partial void OnAlignmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Fate
        {
            get
            {
                return _Fate;
            }
            set
            {
                OnFateChanging(value);
                ReportPropertyChanging("Fate");
                _Fate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fate");
                OnFateChanged();
            }
        }
        private global::System.Int32 _Fate;
        partial void OnFateChanging(global::System.Int32 value);
        partial void OnFateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CharacterLevel
        {
            get
            {
                return _CharacterLevel;
            }
            set
            {
                OnCharacterLevelChanging(value);
                ReportPropertyChanging("CharacterLevel");
                _CharacterLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CharacterLevel");
                OnCharacterLevelChanged();
            }
        }
        private global::System.Int32 _CharacterLevel;
        partial void OnCharacterLevelChanging(global::System.Int32 value);
        partial void OnCharacterLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HitPoints
        {
            get
            {
                return _HitPoints;
            }
            set
            {
                OnHitPointsChanging(value);
                ReportPropertyChanging("HitPoints");
                _HitPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HitPoints");
                OnHitPointsChanged();
            }
        }
        private global::System.Int32 _HitPoints;
        partial void OnHitPointsChanging(global::System.Int32 value);
        partial void OnHitPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Speed
        {
            get
            {
                return _Speed;
            }
            set
            {
                OnSpeedChanging(value);
                ReportPropertyChanging("Speed");
                _Speed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speed");
                OnSpeedChanged();
            }
        }
        private global::System.Int32 _Speed;
        partial void OnSpeedChanging(global::System.Int32 value);
        partial void OnSpeedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Int32 _Cost;
        partial void OnCostChanging(global::System.Int32 value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BaseTraitClass
        {
            get
            {
                return _BaseTraitClass;
            }
            set
            {
                OnBaseTraitClassChanging(value);
                ReportPropertyChanging("BaseTraitClass");
                _BaseTraitClass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseTraitClass");
                OnBaseTraitClassChanged();
            }
        }
        private global::System.Int32 _BaseTraitClass;
        partial void OnBaseTraitClassChanging(global::System.Int32 value);
        partial void OnBaseTraitClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BaseTraitStrength
        {
            get
            {
                return _BaseTraitStrength;
            }
            set
            {
                OnBaseTraitStrengthChanging(value);
                ReportPropertyChanging("BaseTraitStrength");
                _BaseTraitStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseTraitStrength");
                OnBaseTraitStrengthChanged();
            }
        }
        private global::System.Int32 _BaseTraitStrength;
        partial void OnBaseTraitStrengthChanging(global::System.Int32 value);
        partial void OnBaseTraitStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BaseTraitToughness
        {
            get
            {
                return _BaseTraitToughness;
            }
            set
            {
                OnBaseTraitToughnessChanging(value);
                ReportPropertyChanging("BaseTraitToughness");
                _BaseTraitToughness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseTraitToughness");
                OnBaseTraitToughnessChanged();
            }
        }
        private global::System.Int32 _BaseTraitToughness;
        partial void OnBaseTraitToughnessChanging(global::System.Int32 value);
        partial void OnBaseTraitToughnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BaseTraitDefense
        {
            get
            {
                return _BaseTraitDefense;
            }
            set
            {
                OnBaseTraitDefenseChanging(value);
                ReportPropertyChanging("BaseTraitDefense");
                _BaseTraitDefense = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseTraitDefense");
                OnBaseTraitDefenseChanged();
            }
        }
        private global::System.Int32 _BaseTraitDefense;
        partial void OnBaseTraitDefenseChanging(global::System.Int32 value);
        partial void OnBaseTraitDefenseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BaseTraitInitiative
        {
            get
            {
                return _BaseTraitInitiative;
            }
            set
            {
                OnBaseTraitInitiativeChanging(value);
                ReportPropertyChanging("BaseTraitInitiative");
                _BaseTraitInitiative = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseTraitInitiative");
                OnBaseTraitInitiativeChanged();
            }
        }
        private global::System.Int32 _BaseTraitInitiative;
        partial void OnBaseTraitInitiativeChanging(global::System.Int32 value);
        partial void OnBaseTraitInitiativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModTraitClass
        {
            get
            {
                return _ModTraitClass;
            }
            set
            {
                OnModTraitClassChanging(value);
                ReportPropertyChanging("ModTraitClass");
                _ModTraitClass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModTraitClass");
                OnModTraitClassChanged();
            }
        }
        private global::System.Int32 _ModTraitClass;
        partial void OnModTraitClassChanging(global::System.Int32 value);
        partial void OnModTraitClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModTraitStrength
        {
            get
            {
                return _ModTraitStrength;
            }
            set
            {
                OnModTraitStrengthChanging(value);
                ReportPropertyChanging("ModTraitStrength");
                _ModTraitStrength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModTraitStrength");
                OnModTraitStrengthChanged();
            }
        }
        private global::System.Int32 _ModTraitStrength;
        partial void OnModTraitStrengthChanging(global::System.Int32 value);
        partial void OnModTraitStrengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModTraitToughness
        {
            get
            {
                return _ModTraitToughness;
            }
            set
            {
                OnModTraitToughnessChanging(value);
                ReportPropertyChanging("ModTraitToughness");
                _ModTraitToughness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModTraitToughness");
                OnModTraitToughnessChanged();
            }
        }
        private global::System.Int32 _ModTraitToughness;
        partial void OnModTraitToughnessChanging(global::System.Int32 value);
        partial void OnModTraitToughnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModTraitDefense
        {
            get
            {
                return _ModTraitDefense;
            }
            set
            {
                OnModTraitDefenseChanging(value);
                ReportPropertyChanging("ModTraitDefense");
                _ModTraitDefense = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModTraitDefense");
                OnModTraitDefenseChanged();
            }
        }
        private global::System.Int32 _ModTraitDefense;
        partial void OnModTraitDefenseChanging(global::System.Int32 value);
        partial void OnModTraitDefenseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModTraitInitiative
        {
            get
            {
                return _ModTraitInitiative;
            }
            set
            {
                OnModTraitInitiativeChanging(value);
                ReportPropertyChanging("ModTraitInitiative");
                _ModTraitInitiative = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModTraitInitiative");
                OnModTraitInitiativeChanged();
            }
        }
        private global::System.Int32 _ModTraitInitiative;
        partial void OnModTraitInitiativeChanging(global::System.Int32 value);
        partial void OnModTraitInitiativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Reward
        {
            get
            {
                return _Reward;
            }
            set
            {
                OnRewardChanging(value);
                ReportPropertyChanging("Reward");
                _Reward = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reward");
                OnRewardChanged();
            }
        }
        private global::System.Int32 _Reward;
        partial void OnRewardChanging(global::System.Int32 value);
        partial void OnRewardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterEquipment_GoalsCharacters", "CharacterEquipment")]
        public EntityCollection<CharacterEquipment> CharacterEquipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CharacterEquipment>("Entities.FK_CharacterEquipment_GoalsCharacters", "CharacterEquipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CharacterEquipment>("Entities.FK_CharacterEquipment_GoalsCharacters", "CharacterEquipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterPowers_GoalsCharacters", "CharacterPower")]
        public EntityCollection<CharacterPower> CharacterPowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CharacterPower>("Entities.FK_CharacterPowers_GoalsCharacters", "CharacterPower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CharacterPower>("Entities.FK_CharacterPowers_GoalsCharacters", "CharacterPower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterSpells_GoalsCharacters", "CharacterSpell")]
        public EntityCollection<CharacterSpell> CharacterSpells
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CharacterSpell>("Entities.FK_CharacterSpells_GoalsCharacters", "CharacterSpell");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CharacterSpell>("Entities.FK_CharacterSpells_GoalsCharacters", "CharacterSpell", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_GoalsCharacters_GoalsClasses", "GoalsClass")]
        public GoalsClass GoalsClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_GoalsCharacters_GoalsClasses", "GoalsClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_GoalsCharacters_GoalsClasses", "GoalsClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsClass> GoalsClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_GoalsCharacters_GoalsClasses", "GoalsClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsClass>("Entities.FK_GoalsCharacters_GoalsClasses", "GoalsClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_GoalsCharacters_GoalsRaces1", "GoalsRace")]
        public GoalsRace GoalsRace
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_GoalsCharacters_GoalsRaces1", "GoalsRace").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_GoalsCharacters_GoalsRaces1", "GoalsRace").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsRace> GoalsRaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_GoalsCharacters_GoalsRaces1", "GoalsRace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsRace>("Entities.FK_GoalsCharacters_GoalsRaces1", "GoalsRace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_GoalsCharacters_GoalsUsers", "GoalsUser")]
        public GoalsUser GoalsUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsUser>("Entities.FK_GoalsCharacters_GoalsUsers", "GoalsUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsUser>("Entities.FK_GoalsCharacters_GoalsUsers", "GoalsUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsUser> GoalsUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsUser>("Entities.FK_GoalsCharacters_GoalsUsers", "GoalsUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsUser>("Entities.FK_GoalsCharacters_GoalsUsers", "GoalsUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="GoalsClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalsClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalsClass object.
        /// </summary>
        /// <param name="goalsClassId">Initial value of the GoalsClassId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="equipment">Initial value of the Equipment property.</param>
        /// <param name="startingHitPoints">Initial value of the StartingHitPoints property.</param>
        /// <param name="baseClass">Initial value of the BaseClass property.</param>
        /// <param name="page">Initial value of the Page property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static GoalsClass CreateGoalsClass(global::System.Int32 goalsClassId, global::System.String name, global::System.String description, global::System.String equipment, global::System.Int32 startingHitPoints, global::System.String baseClass, global::System.String page, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            GoalsClass goalsClass = new GoalsClass();
            goalsClass.GoalsClassId = goalsClassId;
            goalsClass.Name = name;
            goalsClass.Description = description;
            goalsClass.Equipment = equipment;
            goalsClass.StartingHitPoints = startingHitPoints;
            goalsClass.BaseClass = baseClass;
            goalsClass.Page = page;
            goalsClass.CreatedDate = createdDate;
            goalsClass.ModifiedDate = modifiedDate;
            return goalsClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsClassId
        {
            get
            {
                return _GoalsClassId;
            }
            set
            {
                if (_GoalsClassId != value)
                {
                    OnGoalsClassIdChanging(value);
                    ReportPropertyChanging("GoalsClassId");
                    _GoalsClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalsClassId");
                    OnGoalsClassIdChanged();
                }
            }
        }
        private global::System.Int32 _GoalsClassId;
        partial void OnGoalsClassIdChanging(global::System.Int32 value);
        partial void OnGoalsClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipment
        {
            get
            {
                return _Equipment;
            }
            set
            {
                OnEquipmentChanging(value);
                ReportPropertyChanging("Equipment");
                _Equipment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Equipment");
                OnEquipmentChanged();
            }
        }
        private global::System.String _Equipment;
        partial void OnEquipmentChanging(global::System.String value);
        partial void OnEquipmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StartingHitPoints
        {
            get
            {
                return _StartingHitPoints;
            }
            set
            {
                OnStartingHitPointsChanging(value);
                ReportPropertyChanging("StartingHitPoints");
                _StartingHitPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartingHitPoints");
                OnStartingHitPointsChanged();
            }
        }
        private global::System.Int32 _StartingHitPoints;
        partial void OnStartingHitPointsChanging(global::System.Int32 value);
        partial void OnStartingHitPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BaseClass
        {
            get
            {
                return _BaseClass;
            }
            set
            {
                OnBaseClassChanging(value);
                ReportPropertyChanging("BaseClass");
                _BaseClass = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BaseClass");
                OnBaseClassChanged();
            }
        }
        private global::System.String _BaseClass;
        partial void OnBaseClassChanging(global::System.String value);
        partial void OnBaseClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.String _Page;
        partial void OnPageChanging(global::System.String value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_ClassEquipment_GoalsClasses", "ClassEquipment")]
        public EntityCollection<ClassEquipment> ClassEquipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassEquipment>("Entities.FK_ClassEquipment_GoalsClasses", "ClassEquipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassEquipment>("Entities.FK_ClassEquipment_GoalsClasses", "ClassEquipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_ClassPowers_GoalsClasses", "ClassPower")]
        public EntityCollection<ClassPower> ClassPowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassPower>("Entities.FK_ClassPowers_GoalsClasses", "ClassPower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassPower>("Entities.FK_ClassPowers_GoalsClasses", "ClassPower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_GoalsCharacters_GoalsClasses", "GoalsCharacter")]
        public EntityCollection<GoalsCharacter> GoalsCharacters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoalsCharacter>("Entities.FK_GoalsCharacters_GoalsClasses", "GoalsCharacter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoalsCharacter>("Entities.FK_GoalsCharacters_GoalsClasses", "GoalsCharacter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_RaceFavoredClass_GoalsClasses", "RaceFavoredClass")]
        public EntityCollection<RaceFavoredClass> RaceFavoredClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceFavoredClass>("Entities.FK_RaceFavoredClass_GoalsClasses", "RaceFavoredClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceFavoredClass>("Entities.FK_RaceFavoredClass_GoalsClasses", "RaceFavoredClass", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="GoalsEquipment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalsEquipment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalsEquipment object.
        /// </summary>
        /// <param name="goalsEquipmentId">Initial value of the GoalsEquipmentId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="effects">Initial value of the Effects property.</param>
        /// <param name="rarity">Initial value of the Rarity property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="equipmentClass">Initial value of the EquipmentClass property.</param>
        /// <param name="page">Initial value of the Page property.</param>
        /// <param name="template">Initial value of the Template property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static GoalsEquipment CreateGoalsEquipment(global::System.Int32 goalsEquipmentId, global::System.String name, global::System.String type, global::System.String effects, global::System.String rarity, global::System.Int32 cost, global::System.String equipmentClass, global::System.String page, global::System.Boolean template, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            GoalsEquipment goalsEquipment = new GoalsEquipment();
            goalsEquipment.GoalsEquipmentId = goalsEquipmentId;
            goalsEquipment.Name = name;
            goalsEquipment.Type = type;
            goalsEquipment.Effects = effects;
            goalsEquipment.Rarity = rarity;
            goalsEquipment.Cost = cost;
            goalsEquipment.EquipmentClass = equipmentClass;
            goalsEquipment.Page = page;
            goalsEquipment.Template = template;
            goalsEquipment.CreatedDate = createdDate;
            goalsEquipment.ModifiedDate = modifiedDate;
            return goalsEquipment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsEquipmentId
        {
            get
            {
                return _GoalsEquipmentId;
            }
            set
            {
                if (_GoalsEquipmentId != value)
                {
                    OnGoalsEquipmentIdChanging(value);
                    ReportPropertyChanging("GoalsEquipmentId");
                    _GoalsEquipmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalsEquipmentId");
                    OnGoalsEquipmentIdChanged();
                }
            }
        }
        private global::System.Int32 _GoalsEquipmentId;
        partial void OnGoalsEquipmentIdChanging(global::System.Int32 value);
        partial void OnGoalsEquipmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Effects
        {
            get
            {
                return _Effects;
            }
            set
            {
                OnEffectsChanging(value);
                ReportPropertyChanging("Effects");
                _Effects = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Effects");
                OnEffectsChanged();
            }
        }
        private global::System.String _Effects;
        partial void OnEffectsChanging(global::System.String value);
        partial void OnEffectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rarity
        {
            get
            {
                return _Rarity;
            }
            set
            {
                OnRarityChanging(value);
                ReportPropertyChanging("Rarity");
                _Rarity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Rarity");
                OnRarityChanged();
            }
        }
        private global::System.String _Rarity;
        partial void OnRarityChanging(global::System.String value);
        partial void OnRarityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Int32 _Cost;
        partial void OnCostChanging(global::System.Int32 value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EquipmentClass
        {
            get
            {
                return _EquipmentClass;
            }
            set
            {
                OnEquipmentClassChanging(value);
                ReportPropertyChanging("EquipmentClass");
                _EquipmentClass = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EquipmentClass");
                OnEquipmentClassChanged();
            }
        }
        private global::System.String _EquipmentClass;
        partial void OnEquipmentClassChanging(global::System.String value);
        partial void OnEquipmentClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.String _Page;
        partial void OnPageChanging(global::System.String value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Template
        {
            get
            {
                return _Template;
            }
            set
            {
                OnTemplateChanging(value);
                ReportPropertyChanging("Template");
                _Template = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Template");
                OnTemplateChanged();
            }
        }
        private global::System.Boolean _Template;
        partial void OnTemplateChanging(global::System.Boolean value);
        partial void OnTemplateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterEquipment_GoalsEquipment", "CharacterEquipment")]
        public EntityCollection<CharacterEquipment> CharacterEquipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CharacterEquipment>("Entities.FK_CharacterEquipment_GoalsEquipment", "CharacterEquipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CharacterEquipment>("Entities.FK_CharacterEquipment_GoalsEquipment", "CharacterEquipment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_ClassEquipment_GoalsEquipment", "ClassEquipment")]
        public EntityCollection<ClassEquipment> ClassEquipments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassEquipment>("Entities.FK_ClassEquipment_GoalsEquipment", "ClassEquipment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassEquipment>("Entities.FK_ClassEquipment_GoalsEquipment", "ClassEquipment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="GoalsPower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalsPower : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalsPower object.
        /// </summary>
        /// <param name="goalsPowerId">Initial value of the GoalsPowerId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="effect">Initial value of the Effect property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="range">Initial value of the Range property.</param>
        /// <param name="damage">Initial value of the Damage property.</param>
        /// <param name="page">Initial value of the Page property.</param>
        /// <param name="powerClass">Initial value of the PowerClass property.</param>
        /// <param name="template">Initial value of the Template property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static GoalsPower CreateGoalsPower(global::System.Int32 goalsPowerId, global::System.String name, global::System.String type, global::System.String effect, global::System.String notes, global::System.Int32 cost, global::System.String range, global::System.String damage, global::System.String page, global::System.String powerClass, global::System.Boolean template, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            GoalsPower goalsPower = new GoalsPower();
            goalsPower.GoalsPowerId = goalsPowerId;
            goalsPower.Name = name;
            goalsPower.Type = type;
            goalsPower.Effect = effect;
            goalsPower.Notes = notes;
            goalsPower.Cost = cost;
            goalsPower.Range = range;
            goalsPower.Damage = damage;
            goalsPower.Page = page;
            goalsPower.PowerClass = powerClass;
            goalsPower.Template = template;
            goalsPower.CreatedDate = createdDate;
            goalsPower.ModifiedDate = modifiedDate;
            return goalsPower;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsPowerId
        {
            get
            {
                return _GoalsPowerId;
            }
            set
            {
                if (_GoalsPowerId != value)
                {
                    OnGoalsPowerIdChanging(value);
                    ReportPropertyChanging("GoalsPowerId");
                    _GoalsPowerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalsPowerId");
                    OnGoalsPowerIdChanged();
                }
            }
        }
        private global::System.Int32 _GoalsPowerId;
        partial void OnGoalsPowerIdChanging(global::System.Int32 value);
        partial void OnGoalsPowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Effect
        {
            get
            {
                return _Effect;
            }
            set
            {
                OnEffectChanging(value);
                ReportPropertyChanging("Effect");
                _Effect = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Effect");
                OnEffectChanged();
            }
        }
        private global::System.String _Effect;
        partial void OnEffectChanging(global::System.String value);
        partial void OnEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Int32 _Cost;
        partial void OnCostChanging(global::System.Int32 value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.String _Range;
        partial void OnRangeChanging(global::System.String value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Damage
        {
            get
            {
                return _Damage;
            }
            set
            {
                OnDamageChanging(value);
                ReportPropertyChanging("Damage");
                _Damage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Damage");
                OnDamageChanged();
            }
        }
        private global::System.String _Damage;
        partial void OnDamageChanging(global::System.String value);
        partial void OnDamageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.String _Page;
        partial void OnPageChanging(global::System.String value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PowerClass
        {
            get
            {
                return _PowerClass;
            }
            set
            {
                OnPowerClassChanging(value);
                ReportPropertyChanging("PowerClass");
                _PowerClass = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PowerClass");
                OnPowerClassChanged();
            }
        }
        private global::System.String _PowerClass;
        partial void OnPowerClassChanging(global::System.String value);
        partial void OnPowerClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Template
        {
            get
            {
                return _Template;
            }
            set
            {
                OnTemplateChanging(value);
                ReportPropertyChanging("Template");
                _Template = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Template");
                OnTemplateChanged();
            }
        }
        private global::System.Boolean _Template;
        partial void OnTemplateChanging(global::System.Boolean value);
        partial void OnTemplateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterPowers_GoalsPowers", "CharacterPower")]
        public EntityCollection<CharacterPower> CharacterPowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CharacterPower>("Entities.FK_CharacterPowers_GoalsPowers", "CharacterPower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CharacterPower>("Entities.FK_CharacterPowers_GoalsPowers", "CharacterPower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_ClassPowers_GoalsPowers", "ClassPower")]
        public EntityCollection<ClassPower> ClassPowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassPower>("Entities.FK_ClassPowers_GoalsPowers", "ClassPower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassPower>("Entities.FK_ClassPowers_GoalsPowers", "ClassPower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_RacePowers_GoalsPowers", "RacePower")]
        public EntityCollection<RacePower> RacePowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RacePower>("Entities.FK_RacePowers_GoalsPowers", "RacePower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RacePower>("Entities.FK_RacePowers_GoalsPowers", "RacePower", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="GoalsRace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalsRace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalsRace object.
        /// </summary>
        /// <param name="goalsRaceId">Initial value of the GoalsRaceId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="favoredClasses">Initial value of the FavoredClasses property.</param>
        /// <param name="movement">Initial value of the Movement property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        /// <param name="languages">Initial value of the Languages property.</param>
        /// <param name="page">Initial value of the Page property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static GoalsRace CreateGoalsRace(global::System.Int32 goalsRaceId, global::System.String name, global::System.String description, global::System.String favoredClasses, global::System.Int32 movement, global::System.Int32 points, global::System.String notes, global::System.String languages, global::System.String page, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            GoalsRace goalsRace = new GoalsRace();
            goalsRace.GoalsRaceId = goalsRaceId;
            goalsRace.Name = name;
            goalsRace.Description = description;
            goalsRace.FavoredClasses = favoredClasses;
            goalsRace.Movement = movement;
            goalsRace.Points = points;
            goalsRace.Notes = notes;
            goalsRace.Languages = languages;
            goalsRace.Page = page;
            goalsRace.CreatedDate = createdDate;
            goalsRace.ModifiedDate = modifiedDate;
            return goalsRace;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsRaceId
        {
            get
            {
                return _GoalsRaceId;
            }
            set
            {
                if (_GoalsRaceId != value)
                {
                    OnGoalsRaceIdChanging(value);
                    ReportPropertyChanging("GoalsRaceId");
                    _GoalsRaceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalsRaceId");
                    OnGoalsRaceIdChanged();
                }
            }
        }
        private global::System.Int32 _GoalsRaceId;
        partial void OnGoalsRaceIdChanging(global::System.Int32 value);
        partial void OnGoalsRaceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FavoredClasses
        {
            get
            {
                return _FavoredClasses;
            }
            set
            {
                OnFavoredClassesChanging(value);
                ReportPropertyChanging("FavoredClasses");
                _FavoredClasses = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FavoredClasses");
                OnFavoredClassesChanged();
            }
        }
        private global::System.String _FavoredClasses;
        partial void OnFavoredClassesChanging(global::System.String value);
        partial void OnFavoredClassesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Movement
        {
            get
            {
                return _Movement;
            }
            set
            {
                OnMovementChanging(value);
                ReportPropertyChanging("Movement");
                _Movement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Movement");
                OnMovementChanged();
            }
        }
        private global::System.Int32 _Movement;
        partial void OnMovementChanging(global::System.Int32 value);
        partial void OnMovementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Int32 _Points;
        partial void OnPointsChanging(global::System.Int32 value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Languages
        {
            get
            {
                return _Languages;
            }
            set
            {
                OnLanguagesChanging(value);
                ReportPropertyChanging("Languages");
                _Languages = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Languages");
                OnLanguagesChanged();
            }
        }
        private global::System.String _Languages;
        partial void OnLanguagesChanging(global::System.String value);
        partial void OnLanguagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.String _Page;
        partial void OnPageChanging(global::System.String value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_GoalsCharacters_GoalsRaces1", "GoalsCharacter")]
        public EntityCollection<GoalsCharacter> GoalsCharacters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoalsCharacter>("Entities.FK_GoalsCharacters_GoalsRaces1", "GoalsCharacter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoalsCharacter>("Entities.FK_GoalsCharacters_GoalsRaces1", "GoalsCharacter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_GoalsRaceMeta_GoalsRaces", "GoalsRaceMeta")]
        public EntityCollection<GoalsRaceMeta> GoalsRaceMetas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoalsRaceMeta>("Entities.FK_GoalsRaceMeta_GoalsRaces", "GoalsRaceMeta");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoalsRaceMeta>("Entities.FK_GoalsRaceMeta_GoalsRaces", "GoalsRaceMeta", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_RaceFavoredClass_GoalsRaces", "RaceFavoredClass")]
        public EntityCollection<RaceFavoredClass> RaceFavoredClasses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceFavoredClass>("Entities.FK_RaceFavoredClass_GoalsRaces", "RaceFavoredClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceFavoredClass>("Entities.FK_RaceFavoredClass_GoalsRaces", "RaceFavoredClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_RacePowers_GoalsRaces", "RacePower")]
        public EntityCollection<RacePower> RacePowers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RacePower>("Entities.FK_RacePowers_GoalsRaces", "RacePower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RacePower>("Entities.FK_RacePowers_GoalsRaces", "RacePower", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="GoalsRaceMeta")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalsRaceMeta : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalsRaceMeta object.
        /// </summary>
        /// <param name="goalsCalassMetaId">Initial value of the GoalsCalassMetaId property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static GoalsRaceMeta CreateGoalsRaceMeta(global::System.Int32 goalsCalassMetaId, global::System.String propertyName, global::System.Int32 value, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            GoalsRaceMeta goalsRaceMeta = new GoalsRaceMeta();
            goalsRaceMeta.GoalsCalassMetaId = goalsCalassMetaId;
            goalsRaceMeta.PropertyName = propertyName;
            goalsRaceMeta.Value = value;
            goalsRaceMeta.CreatedDate = createdDate;
            goalsRaceMeta.ModifiedDate = modifiedDate;
            return goalsRaceMeta;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsCalassMetaId
        {
            get
            {
                return _GoalsCalassMetaId;
            }
            set
            {
                if (_GoalsCalassMetaId != value)
                {
                    OnGoalsCalassMetaIdChanging(value);
                    ReportPropertyChanging("GoalsCalassMetaId");
                    _GoalsCalassMetaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalsCalassMetaId");
                    OnGoalsCalassMetaIdChanged();
                }
            }
        }
        private global::System.Int32 _GoalsCalassMetaId;
        partial void OnGoalsCalassMetaIdChanging(global::System.Int32 value);
        partial void OnGoalsCalassMetaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int32 _Value;
        partial void OnValueChanging(global::System.Int32 value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_GoalsRaceMeta_GoalsRaces", "GoalsRace")]
        public GoalsRace GoalsRace
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_GoalsRaceMeta_GoalsRaces", "GoalsRace").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_GoalsRaceMeta_GoalsRaces", "GoalsRace").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsRace> GoalsRaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_GoalsRaceMeta_GoalsRaces", "GoalsRace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsRace>("Entities.FK_GoalsRaceMeta_GoalsRaces", "GoalsRace", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="GoalsSpell")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalsSpell : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalsSpell object.
        /// </summary>
        /// <param name="goalsSpellId">Initial value of the GoalsSpellId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="startingLevel">Initial value of the StartingLevel property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="range">Initial value of the Range property.</param>
        /// <param name="effects">Initial value of the Effects property.</param>
        /// <param name="damage">Initial value of the Damage property.</param>
        /// <param name="boost">Initial value of the Boost property.</param>
        /// <param name="levelBonus">Initial value of the LevelBonus property.</param>
        /// <param name="bonus">Initial value of the Bonus property.</param>
        /// <param name="uses">Initial value of the Uses property.</param>
        /// <param name="page">Initial value of the Page property.</param>
        /// <param name="template">Initial value of the Template property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static GoalsSpell CreateGoalsSpell(global::System.Int32 goalsSpellId, global::System.String name, global::System.Int32 startingLevel, global::System.String action, global::System.String range, global::System.String effects, global::System.String damage, global::System.String boost, global::System.Int32 levelBonus, global::System.String bonus, global::System.String uses, global::System.String page, global::System.Boolean template, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            GoalsSpell goalsSpell = new GoalsSpell();
            goalsSpell.GoalsSpellId = goalsSpellId;
            goalsSpell.Name = name;
            goalsSpell.StartingLevel = startingLevel;
            goalsSpell.Action = action;
            goalsSpell.Range = range;
            goalsSpell.Effects = effects;
            goalsSpell.Damage = damage;
            goalsSpell.Boost = boost;
            goalsSpell.LevelBonus = levelBonus;
            goalsSpell.Bonus = bonus;
            goalsSpell.Uses = uses;
            goalsSpell.Page = page;
            goalsSpell.Template = template;
            goalsSpell.CreatedDate = createdDate;
            goalsSpell.ModifiedDate = modifiedDate;
            return goalsSpell;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoalsSpellId
        {
            get
            {
                return _GoalsSpellId;
            }
            set
            {
                if (_GoalsSpellId != value)
                {
                    OnGoalsSpellIdChanging(value);
                    ReportPropertyChanging("GoalsSpellId");
                    _GoalsSpellId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalsSpellId");
                    OnGoalsSpellIdChanged();
                }
            }
        }
        private global::System.Int32 _GoalsSpellId;
        partial void OnGoalsSpellIdChanging(global::System.Int32 value);
        partial void OnGoalsSpellIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StartingLevel
        {
            get
            {
                return _StartingLevel;
            }
            set
            {
                OnStartingLevelChanging(value);
                ReportPropertyChanging("StartingLevel");
                _StartingLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartingLevel");
                OnStartingLevelChanged();
            }
        }
        private global::System.Int32 _StartingLevel;
        partial void OnStartingLevelChanging(global::System.Int32 value);
        partial void OnStartingLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Range
        {
            get
            {
                return _Range;
            }
            set
            {
                OnRangeChanging(value);
                ReportPropertyChanging("Range");
                _Range = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Range");
                OnRangeChanged();
            }
        }
        private global::System.String _Range;
        partial void OnRangeChanging(global::System.String value);
        partial void OnRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Effects
        {
            get
            {
                return _Effects;
            }
            set
            {
                OnEffectsChanging(value);
                ReportPropertyChanging("Effects");
                _Effects = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Effects");
                OnEffectsChanged();
            }
        }
        private global::System.String _Effects;
        partial void OnEffectsChanging(global::System.String value);
        partial void OnEffectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Damage
        {
            get
            {
                return _Damage;
            }
            set
            {
                OnDamageChanging(value);
                ReportPropertyChanging("Damage");
                _Damage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Damage");
                OnDamageChanged();
            }
        }
        private global::System.String _Damage;
        partial void OnDamageChanging(global::System.String value);
        partial void OnDamageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Boost
        {
            get
            {
                return _Boost;
            }
            set
            {
                OnBoostChanging(value);
                ReportPropertyChanging("Boost");
                _Boost = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Boost");
                OnBoostChanged();
            }
        }
        private global::System.String _Boost;
        partial void OnBoostChanging(global::System.String value);
        partial void OnBoostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LevelBonus
        {
            get
            {
                return _LevelBonus;
            }
            set
            {
                OnLevelBonusChanging(value);
                ReportPropertyChanging("LevelBonus");
                _LevelBonus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LevelBonus");
                OnLevelBonusChanged();
            }
        }
        private global::System.Int32 _LevelBonus;
        partial void OnLevelBonusChanging(global::System.Int32 value);
        partial void OnLevelBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bonus
        {
            get
            {
                return _Bonus;
            }
            set
            {
                OnBonusChanging(value);
                ReportPropertyChanging("Bonus");
                _Bonus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Bonus");
                OnBonusChanged();
            }
        }
        private global::System.String _Bonus;
        partial void OnBonusChanging(global::System.String value);
        partial void OnBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Uses
        {
            get
            {
                return _Uses;
            }
            set
            {
                OnUsesChanging(value);
                ReportPropertyChanging("Uses");
                _Uses = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Uses");
                OnUsesChanged();
            }
        }
        private global::System.String _Uses;
        partial void OnUsesChanging(global::System.String value);
        partial void OnUsesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String School
        {
            get
            {
                return _School;
            }
            set
            {
                OnSchoolChanging(value);
                ReportPropertyChanging("School");
                _School = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("School");
                OnSchoolChanged();
            }
        }
        private global::System.String _School;
        partial void OnSchoolChanging(global::System.String value);
        partial void OnSchoolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Page
        {
            get
            {
                return _Page;
            }
            set
            {
                OnPageChanging(value);
                ReportPropertyChanging("Page");
                _Page = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Page");
                OnPageChanged();
            }
        }
        private global::System.String _Page;
        partial void OnPageChanging(global::System.String value);
        partial void OnPageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Template
        {
            get
            {
                return _Template;
            }
            set
            {
                OnTemplateChanging(value);
                ReportPropertyChanging("Template");
                _Template = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Template");
                OnTemplateChanged();
            }
        }
        private global::System.Boolean _Template;
        partial void OnTemplateChanging(global::System.Boolean value);
        partial void OnTemplateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_CharacterSpells_GoalsSpells", "CharacterSpell")]
        public EntityCollection<CharacterSpell> CharacterSpells
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CharacterSpell>("Entities.FK_CharacterSpells_GoalsSpells", "CharacterSpell");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CharacterSpell>("Entities.FK_CharacterSpells_GoalsSpells", "CharacterSpell", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="GoalsUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoalsUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoalsUser object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static GoalsUser CreateGoalsUser(global::System.Int32 userId, global::System.String userName)
        {
            GoalsUser goalsUser = new GoalsUser();
            goalsUser.UserId = userId;
            goalsUser.UserName = userName;
            return goalsUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_GoalsCharacters_GoalsUsers", "GoalsCharacter")]
        public EntityCollection<GoalsCharacter> GoalsCharacters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoalsCharacter>("Entities.FK_GoalsCharacters_GoalsUsers", "GoalsCharacter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoalsCharacter>("Entities.FK_GoalsCharacters_GoalsUsers", "GoalsCharacter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="RaceFavoredClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RaceFavoredClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RaceFavoredClass object.
        /// </summary>
        /// <param name="raceFavoredClassId">Initial value of the RaceFavoredClassId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static RaceFavoredClass CreateRaceFavoredClass(global::System.Int32 raceFavoredClassId, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            RaceFavoredClass raceFavoredClass = new RaceFavoredClass();
            raceFavoredClass.RaceFavoredClassId = raceFavoredClassId;
            raceFavoredClass.CreatedDate = createdDate;
            raceFavoredClass.ModifiedDate = modifiedDate;
            return raceFavoredClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceFavoredClassId
        {
            get
            {
                return _RaceFavoredClassId;
            }
            set
            {
                if (_RaceFavoredClassId != value)
                {
                    OnRaceFavoredClassIdChanging(value);
                    ReportPropertyChanging("RaceFavoredClassId");
                    _RaceFavoredClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaceFavoredClassId");
                    OnRaceFavoredClassIdChanged();
                }
            }
        }
        private global::System.Int32 _RaceFavoredClassId;
        partial void OnRaceFavoredClassIdChanging(global::System.Int32 value);
        partial void OnRaceFavoredClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_RaceFavoredClass_GoalsClasses", "GoalsClass")]
        public GoalsClass GoalsClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_RaceFavoredClass_GoalsClasses", "GoalsClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_RaceFavoredClass_GoalsClasses", "GoalsClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsClass> GoalsClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsClass>("Entities.FK_RaceFavoredClass_GoalsClasses", "GoalsClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsClass>("Entities.FK_RaceFavoredClass_GoalsClasses", "GoalsClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_RaceFavoredClass_GoalsRaces", "GoalsRace")]
        public GoalsRace GoalsRace
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_RaceFavoredClass_GoalsRaces", "GoalsRace").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_RaceFavoredClass_GoalsRaces", "GoalsRace").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsRace> GoalsRaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_RaceFavoredClass_GoalsRaces", "GoalsRace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsRace>("Entities.FK_RaceFavoredClass_GoalsRaces", "GoalsRace", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Entities", Name="RacePower")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RacePower : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RacePower object.
        /// </summary>
        /// <param name="racePowerId">Initial value of the RacePowerId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static RacePower CreateRacePower(global::System.Int32 racePowerId, global::System.DateTime createdDate, global::System.DateTime modifiedDate)
        {
            RacePower racePower = new RacePower();
            racePower.RacePowerId = racePowerId;
            racePower.CreatedDate = createdDate;
            racePower.ModifiedDate = modifiedDate;
            return racePower;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RacePowerId
        {
            get
            {
                return _RacePowerId;
            }
            set
            {
                if (_RacePowerId != value)
                {
                    OnRacePowerIdChanging(value);
                    ReportPropertyChanging("RacePowerId");
                    _RacePowerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RacePowerId");
                    OnRacePowerIdChanged();
                }
            }
        }
        private global::System.Int32 _RacePowerId;
        partial void OnRacePowerIdChanging(global::System.Int32 value);
        partial void OnRacePowerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_RacePowers_GoalsPowers", "GoalsPower")]
        public GoalsPower GoalsPower
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_RacePowers_GoalsPowers", "GoalsPower").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_RacePowers_GoalsPowers", "GoalsPower").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsPower> GoalsPowerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsPower>("Entities.FK_RacePowers_GoalsPowers", "GoalsPower");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsPower>("Entities.FK_RacePowers_GoalsPowers", "GoalsPower", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Entities", "FK_RacePowers_GoalsRaces", "GoalsRace")]
        public GoalsRace GoalsRace
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_RacePowers_GoalsRaces", "GoalsRace").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_RacePowers_GoalsRaces", "GoalsRace").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoalsRace> GoalsRaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoalsRace>("Entities.FK_RacePowers_GoalsRaces", "GoalsRace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoalsRace>("Entities.FK_RacePowers_GoalsRaces", "GoalsRace", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
